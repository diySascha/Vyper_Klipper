#  Please refer to the wiki(https://github.com/nlef/moonraker-telegram-bot/wiki) for detailed information on how to configure the bot
[bot]
server: localhost


[secrets]
secrets_path: /home/pi/.credentials/telegram-secrets.conf
#	Set the full path to your secrets.conf here. Secrets.conf needs to be readable for the user under which the bot is running.
#	This value is not validated automatically.


[camera]
host: http://localhost:8080/?action=stream
#	This is the adress, where the desired webcam/webstream is located at. Enter this the same way you enter it in 
#	your printers web interface/your player. If you can stream it, the bot supports it, native h264 streams,
#	for example a vlc stream from a runcam webcam is absolutely possible. Do not feel contstrained by mjpeg streams.
#	This value is not validated automatically.
#fps: 30
#	If you want to use the "/video" button/command, you should set the camera fps. Not set by default.
#	This value should be a positive integer >0.
#flip_vertically: false
#	You can flip the camera image vertically, if needed. Disabled by default. Set to true if needed.
#	This value should be boolean.
#flip_horizontally: false
#	You can flip the camera image horizontally, if needed. Disabled by default. Set to true if needed.
#	This value should be boolean.
#rotate: 90_cw
#	You can rotate the camera image, if needed. Disabled by default.
#	Allowed values: 90_cw, 90_ccw, 180. Default behaviour is not to rotate the image.
#fourcc: x264
#	You can change the opencv VideoWriter fourcc codec. The default value is 'x264'.
#	Allowed values: x264, mp4v
#	If you need specific codec support, please open an issue.
#threads: 2 
#	You may limit the threads used for image processing. Default value is calculalated, (os.cpu_count() / 2)
#	This value should be and integer >0 and < os.cpu_count().
video_duration: 5
#	This is the length in seconds of the video, which is sent when requested with /video command. 
#	Default length of a video is 5 seconds
#	This value should be a positive integer >0.
#video_buffer_size: 2
#	On most single-board computers the renderer does not manage to capture and process frames fast enough for a video.
#	If you are getting shorter videos than you requested in video_duration and have free RAM, you can increse this value.
#	Be careful - 1 uncompressed captured image weights about 6mb when in fullHD.
#	OpenCV libraries have a limit of 2 GB, so please calculate your maximum available buffer from your fps and resolution.
#	This value should be a positive integer >0.
#light_control_timeout: 0
#	When the bot toggles lights to take a picture, or record a video, most cameras need a couple of seconds to adjust to 
#	the transition between full darkness and full brightness. This option tells the bot to wait n seconds, before
#	taking the picture, recording a video, doing timelapse photos. The default is not to use a delay.
#	This value should be an integer >=0.
#picture_quality: high
#	This parameter controls the picture quality the bot uses for status and timelapse purposes. 
#	Allowed values: low, high	
#	Low uses jpeg with quality set to 80, high uses losless webp.
#	Default is "high"


[progress_notification]
percent: 5
#	This is an interval in percent, when a notification with a picture is sent to the chat.
#	When set to 5, notifications are sent at 5%, 10%, 15%, etc.
#	When set to 3, notifications are sent at 3%, 6%, 9%, etc.
#	The default is not to send notifications based on print percentage.
#	This value should be an integer >=0.
height: 5.0
#	This is an interval in mm, when a notification with a picture is sent to the chat.
#	When set to 5.0, notifications are sent at 5.0mm, 10.0mm, 15.0mm, etc, print height.
#	When set to 0.25, notifications are sent at 0.25mm, 0.5mm, 0.75mm, etc, print height.
#	The default is not to send notifications based on print height.
#	This value should be an float >=0.0.
time: 60
#	This is the recommended way to use progress notifications.
#	This is an interval in seconds, when a notification with a picture is sent to the chat.
#	When set to 600, notifications are sent at 600 seconds, 1200 seconds, 1800 seconds, etc, print time.
#	When set to 100, notifications are sent at 100 seconds, 200 seconds, 300 seconds, etc, print time.
#	The default is not to send notifications based on time.
#	This type of notifications continues, even when the print is paused. So if your printer triggers a pause, for example 
#	caused by filament runout, you will still get notifications regularly, until the print is completed/canceled.  
#	This value should be an integer >=0.
#groups: group_id_1, group_id_2
#	When running multiple printers/a farm, you may want to aggregate all notifications from all printers in a group.
#	You can enter group IDs here, to which notifications will be sent. No control from a group is possible.
#	Only notifications are sent.
#	Telegram group IDs are negative integers.
#	This should be a list of integers.
#group_only: false
#	If you are using the group feature, you might want to disable individual notifications and use group notifications only.
#	Set this to true to disable individual notifications in individual chats.
#	This value should be boolean.


[timelapse]
basedir: ~/shares/timenas/telegram #~/moonraker-telegram-bot-timelapse
#frame_path: ~/shares/timenas/tmp/timelapse/
#	This sets the folder, where to save timelapse pictures and the resulting video. 
#	Default is '~/moonraker-telegram-bot-timelapse', but you can set it to any catalog, which the bot 
#	has rights to write to. Might be useful for saving the sd cards life by writing to external storage.
#	This value is not validated automatically.
copy_finished_timelapse_dir: ~/shares/timenas/telegram_finished #/home/pi/timelapse/finished
#output_path: ~/shares/timenas/timelapse/
#	This sets the folder, to which finished timelapses get copied to. 
#	The default behaviour is not to copy it anywhere. This might be useful, if you want to keep only the videos, 
#	but clean up the pictures, or if you want to upload the videos to some network location.
#	This value is not validated automatically.
cleanup: false #true
#	Should the bot clean the catalog with pictures and video after the successful sending to the telegram chat.
#	Default is true. You might want to set it to false, if you intend on using the pictures later.
#	This value should be boolean.
height: 0.2
#	The bot can take timelapse pictures based on the z axis height (e.g. 0.2). The default is not to take pictures based on height.
#	This value should be an float >=0.0.
time: 5
#	The bot can take timelapse pictures based on time intervals in seconds. 
#	The default is not to take pictures based on time intervals.
#	This value should be an integer >=0.
target_fps: 15 #30
#	This is the target fps of the created video. The larger this number, the "faster" the timelapse will be.
#	15 fps equals 15 images per second lapsing. The default is 15 fps.
#	This value should be an integer >0.
min_lapse_duration: 10
#	On short prints, or with limited lapse pictures available, the lapse often gets to short to meaningfully display
#	the printing progress. You can specify the desired minimum duration of the created timelapse 
#	(not including last_frame_duration). This means, that the fps will get reduced, if the lapse is shorter than this time.
#	The default is to omit this. 
#	This value should be an integer >0 and <max_lapse_duration
#max_lapse_duration: 0
#	Similar to min_lapse_duration, if your lapse video gets too long to watch, you can specify a desired time, which
#	should not be exceeded. This means, that the fps will get increased, if the lapse is going to be longer than this time.
#	The default is to omit this. 
#	This value should be an integer >0 and >min_lapse_duration
last_frame_duration: 3 #5
#	This allows you to prevent the timelapse video from ending too abruptly. You can choose a duration for which 
#	to loop the last picture taken.
#	Default is 5 seconds. 
#	This value should be an integer >=0.
#after_lapse_gcode: /my_macro
#	You can run a macro or a gcode (e.g /gcode %your gcode here%) after the bot finishes building the timelapse.
#	This may be useful, if you intend shutting down the printer, if you want to automatically start another print,
#	or if you want to do something with the video after its ready. 
#	This value is not validated automatically.
send_finished_lapse: true
#	If you want to build the lapse, but do not want to send it, set this to false. Default is true.
#	This value should be boolean.
manual_mode: false
#	If True, only commands from gcode will manage timelapse.
#	Default is false.
#	This value should be boolean.
#after_photo_gcode: 
#	You can enter any macro or gcode to be run after the "photo_and_gcode" command.
#	Default is not to run any gcode after the command.
#	This value is not validated automatically.

