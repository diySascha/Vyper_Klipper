############################################
#   ADXL345                                #
############################################
[adxl345]
cs_pin: rpi:None 
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus: spidev5.0 #CS = GPIO-12 (Pin32), MISO(SD0) = GPIO-13 (Pin33), MOSI(SDA) = GPIO-14 (Pin8), CLK(SCL) = GPIO-15 (Pin10)
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
axes_map: -z, -x, -y #X-achse = x, Y-achse = y, Z-achse = z
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.


############################################
#   resonance Test settings                #
############################################
[resonance_tester]
accel_chip: adxl345
probe_points:
#    122.5,125,20 
    10, 10, 25  # vorne links
    210, 10, 25  # vorne rechts
    122.5, 122.5, 25  # mitte mittig
    10, 210, 25  # hinten links
    240, 210, 25  # hinten rechts




###########################################
# Input Shaper Test codes and Macros      #
###########################################
#
# check if connectipon to adxl is established:
# ACCELEROMETER_QUERY CHIP=<chip>
# ACCELEROMETER_QUERY CHIP=adxl345
#
# Measuring the resonances
# Now you can run some real-life tests. Run the following command:
# TEST_RESONANCES AXIS=X
# TEST_RESONANCES AXIS=Y


#######################################
# Check if ADXL is there              #
#######################################
[gcode_macro ADXL_CHECK_Chip]
description: Check if ADXL is there  
gcode:
    {action_respond_info("Check if ADXL345 is there  ")}
    {% set adxl_chip = params.ADXL_CHIP | default('adxl345') %}
    ACCELEROMETER_QUERY CHIP={adxl_chip}


#######################################
# Test Resonances X or Y              #
#######################################
#[gcode_macro ADXL_Resonance_test]
#description: Check if ADXL is there  
#gcode:
#    {% set axis = params.AXIS | default('X') %}
#    {action_respond_info("calibrate 'axis' resonances . . .")}
#    CG28
#    TEST_RESONANCES AXIS={axis}


#######################################
# Test Resonances X                   #
#######################################
[gcode_macro ADXL_Resonance_for_X]
description: Check if ADXL is there  
gcode:
    #{% set axis = params.AXIS | default('X') %}
    {action_respond_info("calibrate" 'axis' "resonances . . .")}
    CG28
    TEST_RESONANCES AXIS=X


#######################################
# Test Resonances Y                   #
#######################################
[gcode_macro ADXL_Resonance_for_Y]
description: Check if ADXL is there  
gcode:
    #{% set axis = params.AXIS | default('X') %}
    {action_respond_info("calibrate" 'axis' "resonances . . .")}
    CG28
    TEST_RESONANCES AXIS=Y


################
# Calculate X and Y
###############
[gcode_shell_command calculate_resonance_XY]
command: sh /home/pi/printer_data/config/.scirpts/script_calc_res_x_y.sh
timeout: 480.
verbose: True

[gcode_macro ADXL_calculate_resonance_xy]
gcode:
    RUN_SHELL_COMMAND CMD=calculate_resonance_XY


################
# Calculate only X
###############
[gcode_shell_command calculate_resonance_X]
command: sh /home/pi/printer_data/config/.scirpts/script_calc_res_x.sh
timeout: 240.
verbose: True

[gcode_macro ADXL_calculate_resonance__x]
gcode:
    RUN_SHELL_COMMAND CMD=calculate_resonance_X


################
# Calculate only Y
###############
[gcode_shell_command calculate_resonance_Y]
command: sh /home/pi/printer_data/config/.scirpts/script_calc_res_y.sh
timeout: 240.
verbose: True

[gcode_macro ADXL_calculate_resonance__y]
gcode:
    RUN_SHELL_COMMAND CMD=calculate_resonance_Y
